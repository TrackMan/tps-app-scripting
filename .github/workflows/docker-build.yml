name: Build and Push Docker Images

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: tpsappscriptingacr.azurecr.io
  IMAGE_STATIC: app-scripting-editor
  IMAGE_API: app-scripting-editor-api

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Login to ACR (simple user/pass; or swap to azure/login + OIDC if you prefer) ---
      - name: Docker login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ---------- Build STATIC (nginx) image ----------
      # IMPORTANT: set context/file to your actual static image Dockerfile.
      # If your static image is built from the repo root with ./Dockerfile.nginx, set file accordingly.
      - name: Build & push STATIC image (nginx)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.nginx # <--- CHANGE if your static Dockerfile has a different path/name
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_STATIC }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_STATIC }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_STATIC }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_STATIC }}:buildcache,mode=max

      # ---------- Build API (Node/Express) image ----------
      # This Dockerfile copies the built SPA from the STATIC image via:
      #   ARG REGISTRY
      #   FROM ${REGISTRY}/app-scripting-editor:latest AS web-build
      #   COPY --from=web-build /usr/share/nginx/html ./editor-dist
      #
      # Therefore we MUST pass REGISTRY as a build-arg.
      - name: Build & push API image (Node/Express + SPA)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile # <--- CHANGE if your API Dockerfile has a different path/name
          push: true
          build-args: |
            REGISTRY=${{ env.REGISTRY }}
            VITE_APP_VERSION=1.0.0
            VITE_APP_BUILD_TIME=${{ github.event.head_commit.timestamp }}
            VITE_APP_COMMIT_SHA=${{ github.sha }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_API }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_API }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_API }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_API }}:buildcache,mode=max
